// Code generated by protoc-gen-go.
// source: task.proto
// DO NOT EDIT!

package model

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TaskType int32

const (
	TaskType_UNKNOWN_TASK TaskType = 0
	TaskType_JIAYUAN      TaskType = 1
	TaskType_BAIHE        TaskType = 2
	TaskType_RENREN       TaskType = 3
)

var TaskType_name = map[int32]string{
	0: "UNKNOWN_TASK",
	1: "JIAYUAN",
	2: "BAIHE",
	3: "RENREN",
}
var TaskType_value = map[string]int32{
	"UNKNOWN_TASK": 0,
	"JIAYUAN":      1,
	"BAIHE":        2,
	"RENREN":       3,
}

func (x TaskType) String() string {
	return proto.EnumName(TaskType_name, int32(x))
}
func (TaskType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type SocialImageTask struct {
	Type          TaskType       `protobuf:"varint,1,opt,name=Type,json=type,enum=model.TaskType" json:"Type,omitempty"`
	IdProfileTask *IdProfileTask `protobuf:"bytes,2,opt,name=IdProfileTask,json=idProfileTask" json:"IdProfileTask,omitempty"`
	ImageTask     *ImageTask     `protobuf:"bytes,3,opt,name=ImageTask,json=imageTask" json:"ImageTask,omitempty"`
}

func (m *SocialImageTask) Reset()                    { *m = SocialImageTask{} }
func (m *SocialImageTask) String() string            { return proto.CompactTextString(m) }
func (*SocialImageTask) ProtoMessage()               {}
func (*SocialImageTask) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *SocialImageTask) GetIdProfileTask() *IdProfileTask {
	if m != nil {
		return m.IdProfileTask
	}
	return nil
}

func (m *SocialImageTask) GetImageTask() *ImageTask {
	if m != nil {
		return m.ImageTask
	}
	return nil
}

type IdProfileTask struct {
	BeginId    int64  `protobuf:"varint,1,opt,name=BeginId,json=beginId" json:"BeginId,omitempty"`
	EndId      int64  `protobuf:"varint,2,opt,name=EndId,json=endId" json:"EndId,omitempty"`
	UrlPattern string `protobuf:"bytes,3,opt,name=UrlPattern,json=urlPattern" json:"UrlPattern,omitempty"`
}

func (m *IdProfileTask) Reset()                    { *m = IdProfileTask{} }
func (m *IdProfileTask) String() string            { return proto.CompactTextString(m) }
func (*IdProfileTask) ProtoMessage()               {}
func (*IdProfileTask) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type ImageTask struct {
}

func (m *ImageTask) Reset()                    { *m = ImageTask{} }
func (m *ImageTask) String() string            { return proto.CompactTextString(m) }
func (*ImageTask) ProtoMessage()               {}
func (*ImageTask) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

type JiayuanTask struct {
	SocialImageTask *SocialImageTask `protobuf:"bytes,1,opt,name=SocialImageTask,json=socialImageTask" json:"SocialImageTask,omitempty"`
}

func (m *JiayuanTask) Reset()                    { *m = JiayuanTask{} }
func (m *JiayuanTask) String() string            { return proto.CompactTextString(m) }
func (*JiayuanTask) ProtoMessage()               {}
func (*JiayuanTask) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *JiayuanTask) GetSocialImageTask() *SocialImageTask {
	if m != nil {
		return m.SocialImageTask
	}
	return nil
}

type BaiheTask struct {
	SocialImageTask *SocialImageTask `protobuf:"bytes,1,opt,name=SocialImageTask,json=socialImageTask" json:"SocialImageTask,omitempty"`
}

func (m *BaiheTask) Reset()                    { *m = BaiheTask{} }
func (m *BaiheTask) String() string            { return proto.CompactTextString(m) }
func (*BaiheTask) ProtoMessage()               {}
func (*BaiheTask) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *BaiheTask) GetSocialImageTask() *SocialImageTask {
	if m != nil {
		return m.SocialImageTask
	}
	return nil
}

type RenrenTask struct {
	SocialImageTask *SocialImageTask `protobuf:"bytes,1,opt,name=SocialImageTask,json=socialImageTask" json:"SocialImageTask,omitempty"`
}

func (m *RenrenTask) Reset()                    { *m = RenrenTask{} }
func (m *RenrenTask) String() string            { return proto.CompactTextString(m) }
func (*RenrenTask) ProtoMessage()               {}
func (*RenrenTask) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *RenrenTask) GetSocialImageTask() *SocialImageTask {
	if m != nil {
		return m.SocialImageTask
	}
	return nil
}

type ScraperTask struct {
	Type TaskType `protobuf:"varint,1,opt,name=Type,json=type,enum=model.TaskType" json:"Type,omitempty"`
	Data string   `protobuf:"bytes,2,opt,name=Data,json=data" json:"Data,omitempty"`
}

func (m *ScraperTask) Reset()                    { *m = ScraperTask{} }
func (m *ScraperTask) String() string            { return proto.CompactTextString(m) }
func (*ScraperTask) ProtoMessage()               {}
func (*ScraperTask) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

type ScraperTasks struct {
	Tasks []*ScraperTask `protobuf:"bytes,1,rep,name=Tasks,json=tasks" json:"Tasks,omitempty"`
}

func (m *ScraperTasks) Reset()                    { *m = ScraperTasks{} }
func (m *ScraperTasks) String() string            { return proto.CompactTextString(m) }
func (*ScraperTasks) ProtoMessage()               {}
func (*ScraperTasks) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *ScraperTasks) GetTasks() []*ScraperTask {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func init() {
	proto.RegisterType((*SocialImageTask)(nil), "model.SocialImageTask")
	proto.RegisterType((*IdProfileTask)(nil), "model.IdProfileTask")
	proto.RegisterType((*ImageTask)(nil), "model.ImageTask")
	proto.RegisterType((*JiayuanTask)(nil), "model.JiayuanTask")
	proto.RegisterType((*BaiheTask)(nil), "model.BaiheTask")
	proto.RegisterType((*RenrenTask)(nil), "model.RenrenTask")
	proto.RegisterType((*ScraperTask)(nil), "model.ScraperTask")
	proto.RegisterType((*ScraperTasks)(nil), "model.ScraperTasks")
	proto.RegisterEnum("model.TaskType", TaskType_name, TaskType_value)
}

var fileDescriptor1 = []byte{
	// 362 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x52, 0xc1, 0x4e, 0xc2, 0x40,
	0x10, 0xb5, 0xb4, 0x05, 0x3b, 0x05, 0x69, 0x26, 0xc4, 0xf4, 0x64, 0x4c, 0xbd, 0x10, 0x0f, 0x3d,
	0xe0, 0xc5, 0x78, 0xa2, 0x44, 0x8c, 0x85, 0x58, 0xc8, 0x02, 0x31, 0x9e, 0xc8, 0x42, 0x57, 0x6c,
	0x2c, 0x2d, 0x69, 0xcb, 0x81, 0xdf, 0xf1, 0x4b, 0xdd, 0xae, 0x14, 0x01, 0x2f, 0x1e, 0x48, 0x9a,
	0x66, 0xe6, 0xcd, 0x9b, 0xf7, 0x5e, 0x76, 0x17, 0x20, 0xa3, 0xe9, 0xa7, 0xbd, 0x4a, 0xe2, 0x2c,
	0x46, 0x75, 0x19, 0xfb, 0x2c, 0xb4, 0xbe, 0x24, 0xa8, 0x8f, 0xe2, 0x79, 0x40, 0x43, 0x77, 0x49,
	0x17, 0x6c, 0xcc, 0x09, 0x78, 0x03, 0xca, 0x78, 0xb3, 0x62, 0xa6, 0x74, 0x2d, 0x35, 0x2f, 0x5a,
	0x75, 0x5b, 0x30, 0xed, 0x7c, 0x94, 0xc3, 0x44, 0xc9, 0xf8, 0x1f, 0x1f, 0xa0, 0xe6, 0xfa, 0xc3,
	0x24, 0x7e, 0x0f, 0x42, 0xb1, 0x65, 0x96, 0x38, 0x5b, 0x6f, 0x35, 0xb6, 0xec, 0x83, 0x19, 0xa9,
	0x05, 0xfb, 0x2d, 0xda, 0xa0, 0xed, 0xdc, 0x4c, 0x59, 0xec, 0x19, 0xc5, 0x5e, 0x81, 0x13, 0x2d,
	0x28, 0x4a, 0x6b, 0x7a, 0xe4, 0x85, 0x26, 0x54, 0x3a, 0x6c, 0x11, 0x44, 0xae, 0x2f, 0x42, 0xca,
	0xa4, 0x32, 0xfb, 0x69, 0xb1, 0x01, 0x6a, 0x37, 0xf2, 0x39, 0x5e, 0x12, 0xb8, 0xca, 0xf2, 0x06,
	0xaf, 0x00, 0x26, 0x49, 0x38, 0xa4, 0x59, 0xc6, 0x92, 0x48, 0x38, 0x6a, 0x04, 0xd6, 0x3b, 0xc4,
	0xd2, 0xf7, 0x02, 0x59, 0x03, 0xd0, 0x7b, 0x01, 0xdd, 0xac, 0x69, 0x24, 0xbc, 0xda, 0x7f, 0x0e,
	0x48, 0x78, 0xea, 0xad, 0xcb, 0x6d, 0xe4, 0xa3, 0x29, 0xa9, 0xa7, 0x87, 0x80, 0xf5, 0x02, 0x5a,
	0x87, 0x06, 0x1f, 0xec, 0x44, 0x72, 0x1e, 0x00, 0x61, 0x51, 0xc2, 0x4e, 0x15, 0xef, 0x09, 0xf4,
	0xd1, 0x3c, 0xa1, 0x2b, 0x96, 0xfc, 0xff, 0xf6, 0x11, 0x94, 0x47, 0x9a, 0x51, 0x71, 0xca, 0x1a,
	0x51, 0x7c, 0x5e, 0x5b, 0xf7, 0x50, 0xdd, 0xd3, 0x49, 0xb1, 0x09, 0xaa, 0x28, 0xb8, 0x92, 0xcc,
	0xf3, 0x60, 0x91, 0xe7, 0x97, 0x43, 0xd4, 0xfc, 0x41, 0xa6, 0xb7, 0x6d, 0x38, 0x2f, 0xf4, 0xd1,
	0x80, 0xea, 0xc4, 0xeb, 0x7b, 0x83, 0x57, 0x6f, 0x3a, 0x76, 0x46, 0x7d, 0xe3, 0x0c, 0x75, 0xa8,
	0xf4, 0x5c, 0xe7, 0x6d, 0xe2, 0x78, 0x86, 0x84, 0x1a, 0xa8, 0x1d, 0xc7, 0x7d, 0xee, 0x1a, 0x25,
	0x04, 0x28, 0x93, 0xae, 0xc7, 0x3f, 0x43, 0x9e, 0x95, 0xc5, 0xa3, 0xbe, 0xfb, 0x0e, 0x00, 0x00,
	0xff, 0xff, 0x87, 0xa3, 0x6a, 0x40, 0xe2, 0x02, 0x00, 0x00,
}
